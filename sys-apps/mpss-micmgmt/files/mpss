#!/sbin/runscript
# Copyright 2010-2013 Intel Corporation.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# Disclaimer: The codes contained in these modules may be specific to
# the Intel Software Development Platform codenamed Knights Ferry,
# and the Intel product codenamed Knights Corner, and are not backward
# compatible with other Intel products. Additionally, Intel will NOT
# support the codes or instruction set in future products.
#
# Intel offers no warranty of any kind regarding the code. This code is
# licensed on an "AS IS" basis and Intel is not obligated to provide
# any support, assistance, installation, training, or other services
# of any kind. Intel is also not obligated to provide any updates,
# enhancements or extensions. Intel specifically disclaims any warranty
# of merchantability, non-infringement, fitness for any particular
# purpose, and any other warranty.
#
# Further, Intel disclaims all liability of any kind, including but
# not limited to liability for infringement of any proprietary rights,
# relating to the use of the code, even if Intel is notified of the
# possibility of such liability. Except as expressly stated in an Intel
# license agreement provided with this code and agreed upon with Intel,
# no license, express or implied, by estoppel or otherwise, to any
# intellectual property rights is granted herein.
#
# mpss	Start mpssd.
#

exec=/usr/sbin/mpssd
sysfs="/sys/class/mic"

start()
{
	[ -x $exec ] || exit 5

	# Ensure the driver is loaded
	[ -d "$sysfs" ] || (ebegin "Loading mic module"; modprobe mic; eend $?)

	ebegin "Starting Intel(R) MPSS"

	if [ "`ps -e | awk '{print $4}' | grep mpssd`" = "mpssd" ]; then
		echo
		micctrl -s
		return 0;
	fi

	$exec
	RETVAL=$?
	if [ "$RETVAL" = "0" ]; then
		micctrl -w 1> /dev/null
		RETVAL=$?
	fi

	eend $RETVAL 

	return $RETVAL
}

stop()
{
	ebegin "Shutting down Intel(R) MPSS"

	WAITRET=0
	MPSSD=`ps ax | grep $exec | grep -v grep`

	if [ "$MPSSD" = "" ]; then
		echo
		return 0;
	fi

	MPSSDPID=`echo $MPSSD | awk '{print $1}'`
	kill -s QUIT $MPSSDPID > /dev/null 2>/dev/null
	RETVAL=$?

	if [ $RETVAL = 0 ]; then
		while [ "`ps -e | awk '{print $4}' | grep mpssd`" = "mpssd" ]; do sleep 1; done
		micctrl -w 1> /dev/null
		WAITRET=$?
		if [ $WAITRET = 9 ]; then
			ebegin "Shutting down Intel(R) MPSS by force"
			micctrl -r 1> /dev/null
			RETVAL=$?
			if [ $RETVAL = 0 ]; then
				micctrl -w 1> /dev/null
				WAITRET=$?
			fi
		fi
	fi

	eend $?

	return $RETVAL
}

restart()
{
	stop
	start
}

status()
{
	if [ "`ps -e | awk '{print $4}' | grep mpssd`" = "mpssd" ]; then
		einfo "mpss is running"
		STOPPED=0
	else
		eerror "mpss is stopped"
		STOPPED=3
	fi
	return $STOPPED
}

#unload()
#{
#	if [ ! -d "$sysfs" ]; then
#		ebegin "Removing MIC Module"
#		eend $?
#		return
#	fi
#
#	stop
#	RETVAL=$?
#
#	ebegin "Removing MIC Module"
#
#	if [ $RETVAL = 0 ]; then
#		sleep 1
#		modprobe -r mic
#		RETVAL=$?
#	fi
#
#	eend $?
#	return $RETVAL
#}



